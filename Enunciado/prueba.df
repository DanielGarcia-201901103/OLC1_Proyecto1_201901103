program

! Esto es un comentario de una sola línea
<! Esto es un comentario
Multilínea !>

var:double:: numero <- 2.5 end;

! Ejemplos
var:double:: numero <- 2.5 end;
var:char[]::cadena <- "cadena" end;
var:double:: copia <- numero end; ! copia tiene el valor 2.5

! Ejemplos
arr:double::@darray <- [1, 2, 3, 4, 5] end; ! Arreglo de tipo double
arr:char[]::@carray <- ["12", "2", "3"] end; ! Arreglo de tipo string
arr:double::@carray <- [numero, copia, 7] end; ! Puede usar variables

! Operaciones
var:double:: suma <- SUM(5, 2) end;
var:double:: resta <- RES(3, 2) end;
var:double:: multi <- MUL(4, numero) end; ! Funciona con variables
var:double:: division <- DIV(1, variable) end;
var:double:: modulo <- MOD(5, 4) end;
! Operaciones anidadas
var:double:: suma <- MUL( SUM(7,3) , RES(7, DIV(25,5)) ) end;
var:double:: suma <- MUL( SUM(7,3) , RES(MUL(25,SUM(1,3)), DIV(25,5)) ) end;
arr:double::@darray <- [ SUM(7,3), DIV(25,5)] end; ! Arreglo con funciones

var:double:: numero <- 15 end;
console::print = "hola", numero, 15, "adios" end;
! Salida: hola, 15, adios
console::print = 1, 2, SUM(3,5) end;
! Salida: 1, 2, 8, 15.7

arr:double::@darray <- [1, 2, 3, 4, 5] end;
var:char[ ]:: ttt<- "Enteros" end;
console::column = "Enteros" -> @darray end;
console::column = ttttt -> [1, 2, 3, 4, 5] end;


end program
